Bugs:

we should have a comment on the general design

when we show values or changes, save the previous cursor, 
and when we go back and haven't moved, set the cursor back to the previous one
`m = a.[b].c` (F) `m = [42]` (F) `m = a.[b].c`
`m = a.[b].c` (F) `m = [42]` (A) `[m] = 42` (F) `[m] = a.b.c`

implement strings, then test combinations of arrays, structs, pointers, and strings
casts

malloc and free
dynamic arrays as structs,
static arrays as pointers

unary minus and not operators not implemented

someday port to C through WebAssembly, for faster running and printing

Ideas:

maybe showing changes should show the result of the change, not the value before it

make a comma operator, see how parsing looks like

add page up and page down

pressing M makes the prev/next use/change check memory instead of ident
needs visual feedback

pressing Q will show the value of the ident under the inspection cursor or a repeated expression
useful for seeing where an ident or memory address or expression was used

pressing P will make the current dataflow hide points affect other dataflows

make an example that uses a lot of binary operations in a conditional

make a demo where we solve a nasty bug

we could contract nested if statements to reduce indentation, but declarations in them have to be transformed

pressing a button when the cursor is on an ident shows the value of that ident at that point in time
especially when it's the left hand side of an assign or opassign

we could set the execution to scroll automatically by some speed, and maybe bounce between flowpoints

we could find the bug, fix it live, recompile, and run directly from the buggy place to check if it was fixed