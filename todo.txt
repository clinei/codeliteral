Bugs:

we should have a comment on the general design

do while loop not implemented, use an if (true) for the first cycle

true and false keywords not implemented

increment and decrement, and unary minus and not operators not implemented
bitwise & and bitwise |

someday port to C through WebAssembly, for faster running and printing

Ideas:

relocate flowpoint move buttons to left side

add page up and page down
speed up scrolling when holding down W or D

need to implement heap and stack memory, and map_memory_to_changes and map_memory_to_uses
malloc and free
arrays

pressing M makes the prev/next use/change check memory instead of ident
needs visual feedback

pressing E shows the elements inside binary operations, so they don't collapse into a value
make an example that uses a lot of binary operations in a conditional

make a demo where we solve a nasty bug

we could inline if statements, but declarations in them have to be transformed

pressing a button when the cursor is on an ident shows the value of that ident at that point in time
especially when it's the left hand side of an assign or opassign

we could set the execution to scroll automatically by some speed, and maybe bounce between flowpoints

we could find the bug, fix it live, recompile, and run directly from the buggy place to check if it was fixed